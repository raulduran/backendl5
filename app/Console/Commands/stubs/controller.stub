<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Controllers\Controller;
use DummyRootNamespaceHttp\Requests\{{Model}}Request;
use DummyRootNamespaceModels\{{Model}};
use Illuminate\Http\Request;
use Kris\LaravelFormBuilder\FormBuilder;

class DummyClass extends Controller {

    /**
     * Display a listing of the resource.
     *
     * @param  Request  $request
     * @return Response
     */
    public function index(Request $request)
    {
        $results = {{Model}}::results($request);

        return view('{{models}}.index', compact('results', 'request'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @param  FormBuilder  $formBuilder
     * @return Response
     */
    public function create(FormBuilder $formBuilder)
    {
        $form = $formBuilder->create('App\Forms\{{Model}}Form', [
            'method' => 'POST',
            'url' => route('admin.{{models}}.store')
        ]);

        return view('layout.partials.form', compact('form'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  {{Model}}Request  $request
     * @return Response
     */
    public function store({{Model}}Request $request)
    {
        ${{model}} = {{Model}}::create($request->all());

        $route = ($request->get('task')=='apply') ? route('admin.{{models}}.edit', ${{model}}->id) : route('admin.{{models}}.index');

        return redirect($route)->with([
            'status' => trans('messages.saved'),
            'type-status' => 'success'
        ]);
    }

    /**
     * Display the specified resource.
     *
     * @param  {{Model}} ${{model}}
     * @return Response
     */
    public function show({{Model}} ${{model}})
    {
        return view('{{models}}.show', compact('{{model}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  {{Model}} ${{model}}
     * @param  FormBuilder  $formBuilder
     * @return Response
     */
    public function edit({{Model}} ${{model}}, FormBuilder $formBuilder)
    {
        $form = $formBuilder->create('App\Forms\{{Model}}Form', [
            'model' => ${{model}},
            'method' => 'PATCH',
            'url' => route('admin.{{models}}.update', ${{model}}->id)
        ]);

        return view('layout.partials.form', compact('form'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  {{Model}} ${{model}}
     * @param  {{Model}}Request  $request
     * @return Response
     */
    public function update({{Model}} ${{model}}, {{Model}}Request $request)
    {
        ${{model}}->update($request->all());

        $route = ($request->get('task')=='apply') ? route('admin.{{models}}.edit', ${{model}}->id) : route('admin.{{models}}.index');

        return redirect($route)->with([
            'status' => trans('messages.saved'),
            'type-status' => 'success'
        ]);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  {{Model}} ${{model}}
     * @return Response
     */
    public function destroy({{Model}} ${{model}})
    {
        ${{model}}->delete();

        return redirect(route('admin.{{models}}.index'))->with([
            'status' => trans('messages.deleted'),
            'type-status' => 'success'
        ]);
    }

    /**
     * Delete various.
     *
     * @param  Request  $request
     * @return Response
     */
    public function delete(Request $request)
    {
        {{Model}}::deleteAll($request->get('ids'));

        return redirect(route('admin.{{models}}.index'))->with([
            'status' => trans('messages.deleted'),
            'type-status' => 'success'
        ]);
    }
}
